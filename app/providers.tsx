// app/providers.tsx
'use client';

import React from 'react';
import { WagmiProvider, createConfig, http } from 'wagmi';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { base, mainnet } from 'wagmi/chains'; // Base ve Mainnet zincirlerini import edin
// ğŸš¨ FARCASTER CONNECTOR'I BURADAN Ä°MPORT EDÄ°N
import { farcasterMiniApp } from '@farcaster/miniapp-wagmi-connector';

// 1. Desteklenen Zincirleri ve BaÄŸlantÄ±larÄ± TanÄ±mla
const config = createConfig({
  // Farcaster genellikle Base zinciri Ã¼zerinde Ã§alÄ±ÅŸtÄ±ÄŸÄ± iÃ§in Base'i kullanmak yaygÄ±ndÄ±r
  chains: [base, mainnet], 
  
  // 2. Connector'larÄ± TanÄ±mla
  connectors: [
    // ğŸš¨ FARCASTER MÄ°NÄ° APP CONNECTOR'I EKLE
    farcasterMiniApp(), // SÄ±nÄ±fÄ± Ã§aÄŸÄ±rÄ±yoruz: farcasterMiniApp()
    
    // Ä°steÄŸe baÄŸlÄ± olarak diÄŸer connector'larÄ± da ekleyebilirsiniz (Ã¶r: Injected, WalletConnect)
    // injected(), 
  ],
  
  // 3. RPC Transport'larÄ± TanÄ±mla
  transports: {
    [base.id]: http(),
    [mainnet.id]: http(),
    // DiÄŸer zincirler iÃ§in de RPC baÄŸlantÄ±larÄ± tanÄ±mlanabilir
  },
});

// React Query istemcisini oluÅŸtur
const queryClient = new QueryClient();

// Provider bileÅŸenini oluÅŸtur
export function Providers({ children }: { children: React.ReactNode }) {
  return (
    <WagmiProvider config={config}>
      <QueryClientProvider client={queryClient}>
        {children}
      </QueryClientProvider>
    </WagmiProvider>
  );
}